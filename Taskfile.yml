# Taskfile.yml â€” Cross-platform task runner (https://taskfile.dev)
version: '3'

vars:
  VENV: .venv

tasks:
  default:
    cmds:
      - task: help

  help:
    silent: true
    cmds:
      - |
        echo "Tasks:"
        echo "  setup      - create venv + install deps"
        echo "  preflight  - run readiness checks"
        echo "  test       - pytest if available"
        echo "  lint       - ruff/flake8 if available"
        echo "  fmt        - ruff format/black if available"
        echo "  verify     - run CLI verify (preflight first)"
        echo "  clean      - remove caches"

  setup:
    cmds:
      - python3 -m venv {{.VENV}} || python -m venv {{.VENV}}
      - '{{.VENV}}/bin/python -m pip install --upgrade pip wheel || .venv/Scripts/python -m pip install --upgrade pip wheel'
      - '{{.VENV}}/bin/pip install -r requirements.txt || .venv/Scripts/pip install -r requirements.txt'

  preflight:
    cmds:
      - '{{.VENV}}/bin/python preflight.py || .venv/Scripts/python preflight.py'

  test:
    cmds:
      - '{{.VENV}}/bin/pytest -q || .venv/Scripts/pytest -q || echo "pytest not installed"'

  lint:
    cmds:
      - '{{.VENV}}/bin/ruff check || .venv/Scripts/ruff check || .venv/Scripts/flake8 || echo "no linter installed"'

  fmt:
    cmds:
      - '{{.VENV}}/bin/ruff format || .venv/Scripts/ruff format || .venv/Scripts/black . || echo "no formatter installed"'

  verify:
    cmds:
      - '{{.VENV}}/bin/python -m automic_bootstrap.cli preflight || echo "preflight not wired"'
      - '{{.VENV}}/bin/python -m automic_bootstrap.cli verify || echo "verify not available"'
      - '.venv/Scripts/automic-bootstrap preflight || echo "preflight not wired (Windows)"'
      - '.venv/Scripts/automic-bootstrap verify || echo "verify not available (Windows)"'

  clean:
    cmds:
      - rm -rf .pytest_cache .ruff_cache dist build *.egg-info || true
      - find . -type d -name "__pycache__" -prune -exec rm -rf {} + || true
